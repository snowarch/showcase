////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// layout mixins - start

@mixin edgtfTableLayout() {
    position: relative;
    display: table;
    table-layout: fixed;
    height: 100%;
    width: 100%;
}

@mixin edgtfTableCellLayout($vertical-align: middle) {
    position: relative;
    display: table-cell;
    height: 100%;
    width: 100%;
    vertical-align: $vertical-align;
}

@mixin edgtfRelativeHolderLayout($vertical-align: middle) {
    position: relative;
    display: inline-block;
    width: 100%;
    vertical-align: $vertical-align;
}

@mixin edgtfAbsoluteHolderLayout() {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

@mixin edgtfTypographyLayout() {
    color: inherit;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    font-style: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    text-transform: inherit;
}

// layout mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// transition mixins - start

@mixin edgtfTransition($transition-param...) {
    -webkit-transition: $transition-param;
    -moz-transition: $transition-param;
    transition: $transition-param;
}

@mixin edgtfTransitionTransform($transition-param...) {
    -webkit-transition: -webkit-transform $transition-param;
    -moz-transition: -moz-transform $transition-param;
    transition: transform $transition-param;
}

@mixin edgtfTransform($transform-param...) {
    -webkit-transform: $transform-param;
    -moz-transform: $transform-param;
    transform: $transform-param;
}

@mixin edgtfAnimation($animation-param...) {
    -webkit-animation: $animation-param;
    -moz-animation: $animation-param;
    animation: $animation-param;
}

@mixin edgtfTransformOrigin($animation-param...) {
    -webkit-transform-origin: $animation-param;
    -moz-transform-origin: $animation-param;
    transform-origin: $animation-param;
}

// transition mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// checkbox mixins - start

$checkbox-size: 15px;
$checkbox-border-width: 1px;

%checkbox-style {
    position: relative;
    margin: 8px 0;
    line-height: 1;

    input[type=checkbox] {
        width: $checkbox-size;
        height: $checkbox-size;
        max-height: $checkbox-size;
        position: relative;
        display: inline-block;
        vertical-align: top;
        top: 0;
        left: 0;
        margin: 0;
    }

    input[type=checkbox] + label {
        position: absolute;
        top: 0;
        left: 0;
        display: inline-block;
        line-height: 0;
        pointer-events: none;
        cursor: pointer;
    }

    input[type=checkbox] + label span.edgtf-label-text {
        display: inline-block;
        padding-left: 10px;
        line-height: $checkbox-size;
        color: $default-heading-color;
    }

    input[type=checkbox] + label .edgtf-label-view {
        display: inline-block;
        vertical-align: top;
        width: $checkbox-size;
        height: $checkbox-size;
        background-color: $default-background-color;
        border: $checkbox-border-width solid $default-border-color;
        border-radius: 2px;
        cursor: pointer;
        box-sizing: border-box;

        &:hover {
            cursor: pointer;
        }
    }

    input[type=checkbox] + label .edgtf-label-view:after {
        content: '';
        position: absolute;
        top: ($checkbox-size - ($checkbox-size / 2 - $checkbox-border-width)) / 2;
        left: ($checkbox-size - ($checkbox-size / 2 - $checkbox-border-width)) / 2;
        width: $checkbox-size / 2 - $checkbox-border-width;
        height: $checkbox-size / 2 - $checkbox-border-width;
        background-color: $first-main-color;
        opacity: 0;
        @include edgtfTransition(opacity 0.3s ease-in-out);
    }

    input[type=checkbox]:checked + label .edgtf-label-view:after {
        opacity: 1;
    }
}

// checkbox mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// common mixins - start

@mixin edgtfBckImageStyle() {
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center center;
}

@mixin edgtfImgBorder($border-color: $default-border-color) {
	border:2px solid $border-color;
	box-sizing: border-box;
}

@mixin edgtfImageOverlayHoverStyle($with-hover: true) {
    
    @if ($with-hover) {
        
        &:hover {
            
            &:after {
                opacity: 1;
            }
        }

        &:after {
            @include edgtfAbsoluteHolderLayout();
            content: '';
            background-color: rgba(0,0,0,.4);
            opacity: 0;
            @include edgtfTransition(opacity .2s ease-in-out);
        }

    } @else {
        @include edgtfAbsoluteHolderLayout();
        content: '';
        background-color: rgba(0,0,0,.4);
        opacity: 0;
        @include edgtfTransition(opacity .2s ease-in-out);
    }
}

//media query mixins - start

@mixin laptop-landscape-large {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-large)) {
        @content;
    }
}

@mixin laptop-landscape-mac {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-mac)) {
        @content;
    }
}

@mixin laptop-landscape-medium {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape-medium)) {
        @content;
    }
}

@mixin laptop-landscape {
    @media only screen and (max-width: map-get($breakpoints, laptop-landscape)) {
        @content;
    }
}

@mixin ipad-landscape {
    @media only screen and (max-width: map-get($breakpoints, ipad-landscape)) {
        @content;
    }
}

@mixin ipad-portrait {
    @media only screen and (max-width: map-get($breakpoints, ipad-portrait)) {
        @content;
    }
}

@mixin phone-landscape {
    @media only screen and (max-width: map-get($breakpoints, phone-landscape)) {
        @content;
    }
}

@mixin phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, phone-portrait)) {
        @content;
    }
}

@mixin smaller-phone-portrait {
    @media only screen and (max-width: map-get($breakpoints, smaller-phone-portrait)) {
        @content;
    }
}

// media query mixins - end

@mixin edgtfStandardPaginationStyle($list_type: null) {
    @include edgtfRelativeHolderLayout(top);
    margin: 20px 0 0;
    clear: both;
    font-size: 20px;

    @if ($list_type == 'shop') {
        @include ipad-landscape {
            margin: 0 0 40px;
        }
    }

    ul {
        @include edgtfRelativeHolderLayout(top);
        padding: 0;
        margin: 0;
        list-style: none;
        text-align: center;

        li {
            position: relative;
            display: inline-block;
            vertical-align: top;
            margin: 0 14px;

            a {
                position: relative;
                display: inline-block;
                vertical-align: top;
                margin: 0;
                padding: 0;
            }

            &.edgtf-pag-active {
                
                a {
                    color: $first-main-color;
                }
            }
	        	  
            &.edgtf-pag-prev,
            &.edgtf-pag-next {
                a {
                    font-size: 24px;

                    span {
                        display: block;
                        line-height: inherit;
                    }
                }
            }
	        &.edgtf-pag-prev {
		        margin: 3px 20px 3px 0
	        }
	
	        &.edgtf-pag-next {
		        margin: 3px 0 3px 20px
	        }

            @if ($list_type == 'shortcode') {
                
                &.edgtf-pag-prev {
                    
                    a {
                        opacity: 0;
                    }
                }

                &.edgtf-pag-next {
                    
                    a {
                        opacity: 1;
                    }
                }

            } @else if ($list_type == 'shop') {

                span {
                    position: relative;
                    display: inline-block;
                    vertical-align: top;
                    margin: 0;
                    padding: 0;
                    color: $first-main-color;
                }

                a {
                    
                    &.next,
                    &.prev {
                        font-size: 0;
                        line-height: 0;
                    }

                    &.prev {
                        margin-right: -10px;
                    }

                    &.next {
                        margin-left: -10px;
                    }
                }
            }
	
	        &.edgtf-pag-prev a {
                svg {
                    @include edgtfTransform(scaleX(-1));
                }
            }
        }
    }
}

@mixin edgtfButtonDefaultStyle() {
    position: relative;
    display: inline-block;
    vertical-align: middle;
    width: auto;
    margin: 0;
    font-family: $default-heading-font;
    font-size: 17px;
    line-height: 2em;
    letter-spacing: 0.12em;
    font-weight: 700;
    text-transform: uppercase;
    outline: none;
    box-sizing: border-box;
    @include edgtfTransition(color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out);
}

@mixin edgtfButtonSize($size: medium) {
    
    @if ($size == 'small') {
        padding: 9px 36px;

    } @else if ($size == 'medium') {
        padding: 9px 51px;

    } @else if ($size == 'large') {
        padding: 13px 66px;

    } @else if ($size == 'huge') {
        display: block;
        text-align: center;
        padding: 13px 26px;
    }
}

@mixin edgtfButtonTransparentColor() {
    color: $default-text-color;
    background-color: transparent;
}

@mixin edgtfButtonSolidColor($important: null) {
    color: #081010 $important;
    background-color: $default-heading-color $important;
    border: 2px solid transparent $important;
}

@mixin edgtfButtonSolidColorLight($important: null) {
    color: $default-heading-color $important;
    background-color: #081010 $important;
    border: 2px solid transparent $important;
}

@mixin edgtfButtonSolidHoverColor($important: null) {
    color: #fff $important;
    background-color: #1d1d1d $important;
}

@mixin edgtfButtonOutlineColor($important: null) {
    color: #fff $important;
    background-color: transparent $important;
    border: 2px solid #fff $important;
}

@mixin edgtfButtonOutlineColorLight($important: null) {
    color: $default-text-color-light $important;
    background-color: transparent $important;
    border: 2px solid $default-text-color-light $important;
}

@mixin edgtfButtonOutlineHoverColor($important: null) {
    color: #fff $important;
    background-color: #1d1d1d $important;
    border-color: #1d1d1d $important;
}

@mixin edgtfFormSubmitBtn($color:$first-main-color) {
	width:100%;
	padding: 13px;
	border: 2px solid $color;
	background-color: transparent;
	color: $color;
	font-family: $default-heading-font;
	font-weight: bold;
	text-transform: uppercase;
    border-radius: 0px;
}

@mixin edgtfPlaceholder {
    &::-webkit-input-placeholder {
        @content
    }

    &:-moz-placeholder {
        @content;

        opacity: 1;
    }
    &::-moz-placeholder {
        @content;

        opacity: 1;
    }
    &:-ms-input-placeholder {
        @content
    }
}

// common mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// mixins styles - start

%input-style {
    position: relative;
    width: 100%;
    margin: 0 0 4px;
    padding: $input-vertical-padding $input-horizontal-padding;
    font-family: inherit;
    font-size: 16px;
    font-weight: inherit;
    line-height: calc(#{$input-height} - (#{$input-vertical-padding} * 2) - 2px);
    color: $default-heading-color;
    background-color: transparent;
    border: 2px solid $default-border-color;
    border-radius: 0;
    outline: 0;
    cursor: pointer;
    -webkit-appearance: none;
    box-sizing: border-box;
    @include edgtfTransition(border-color 0.2s ease-in-out);

    &:focus {
        color: $default-heading-color;
        border-bottom-color: $first-main-color;
    }

    @include edgtfPlaceholder {
        color: inherit;
    }
	
	&:-webkit-autofill,
	&:-webkit-autofill:hover,
	&:-webkit-autofill:focus {
		background-color: inherit;
	}
}

// mixins styles - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// flexbox mixins - start

@mixin edgtfFlexContainer($flex-direction: row, $flex-wrap: nowrap, $justify-content: flex-start, $align-items: stretch, $align-content: stretch ) {
    display: flex;
    flex-direction: $flex-direction;
    flex-wrap: $flex-wrap;
    justify-content: $justify-content;
    align-items: $align-items;
    align-content: $align-content;
}

@mixin edgtfFlexItem($order: 0, $flex-grow: 0, $flex-shrink: 1, $flex-basis: auto) {
    order: $order;
    flex-grow: $flex-grow;
    flex-shrink: $flex-shrink;
    flex-basis: $flex-basis;
}

// flexbox mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// animation mixin - start

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

@mixin animation($name, $duration, $repeat, $timing, $delay) {
    -webkit-animation-name: $name;
    -webkit-animation-duration: $duration;
    -webkit-animation-iteration-count: $repeat;
    -webkit-animation-timing-function: $timing;
    -webkit-animation-delay: $delay;
    -webkit-animation-fill-mode: forwards; // this prevents the animation from restarting!

    animation-name: $name;
    animation-duration: $duration;
    animation-iteration-count: $repeat;
    animation-timing-function: $timing;
    animation-delay: $delay;
    animation-fill-mode: forwards; // this prevents the animation from restarting!
}

// animation mixin - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// heading mixins - start

@mixin edgtfDefaultHeadingStyle() {
    font-family: $default-heading-font;
    margin: 20px 0;
    color: $default-heading-color;
    font-weight: 700;
    text-transform: uppercase;

    a {
        @include edgtfTypographyLayout();

        &:hover {
            color: $first-main-color;
        }
    }
}

@mixin edgtfH1() {
    font-size: 90px;
    line-height: .88em;
    letter-spacing: -.04em;
}

@mixin edgtfH2() {
    font-size: 60px;
    line-height: 1em;
    letter-spacing: -.04em;
}

@mixin edgtfH3() {
    font-size: 45px;
    line-height: 1em;
    letter-spacing: -.04em;
}

@mixin edgtfH4() {
    font-size: 35px;
    line-height: 1em;
    letter-spacing: -.04em;
}

@mixin edgtfH5() {
    font-size: 25px;
    line-height: 1.2em;
    letter-spacing: -.04em;
}

@mixin edgtfH6() {
    font-size: 20px;
    line-height: 1.45em;
    letter-spacing: -.02em;
}

// heading mixins - end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////